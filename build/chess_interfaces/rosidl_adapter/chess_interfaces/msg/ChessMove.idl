// generated from rosidl_adapter/resource/msg.idl.em
// with input from chess_interfaces/msg/ChessMove.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"

module chess_interfaces {
  module msg {
    @verbatim (language="comment", text=
      "象棋移动消息" "\n"
      "用于表示一次象棋移动的完整信息")
    struct ChessMove {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "移动基本信息" "\n"
        "起始格子 (0-63)")
      int8 from_square;

      @verbatim (language="comment", text=
        "目标格子 (0-63)")
      int8 to_square;

      @verbatim (language="comment", text=
        "移动的棋子类型 (1-6)")
      int8 piece_type;

      @verbatim (language="comment", text=
        "被吃的棋子类型 (0表示无)")
      int8 captured_piece;

      @verbatim (language="comment", text=
        "兵升变类型 (0表示无)")
      int8 promotion;

      @verbatim (language="comment", text=
        "特殊移动标记" "\n"
        "是否为易位")
      boolean is_castling;

      @verbatim (language="comment", text=
        "是否为吃过路兵")
      boolean is_en_passant;

      @verbatim (language="comment", text=
        "是否将军")
      boolean is_check;

      @verbatim (language="comment", text=
        "是否将死")
      boolean is_checkmate;

      @verbatim (language="comment", text=
        "置信度和时间信息" "\n"
        "识别置信度 (0.0-1.0)")
      float confidence;

      @verbatim (language="comment", text=
        "AI思考时间 (秒)")
      float thinking_time;
    };
  };
};
